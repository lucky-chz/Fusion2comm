Namespace(fusion_method='intermediate', hypes_yaml='/space/chuhz/workspace/v2x_object/Where2comm/opencood/hypes_yaml/dair-v2x/dair_where2comm_attn_multiscale_resnet_logits_fuse3d_da_ce_0.2_add_occlusion_1.yaml', model_dir='')
Dataset Building
Creating Model
Training start
learning rate 0.002000
/space/chuhz/software/anaconda3/envs/Where2comm/lib/python3.7/site-packages/mmcv/__init__.py:21: UserWarning: On January 1, 2023, MMCV will release v2.0.0, in which it will remove components related to the training process and add a data transformation module. In addition, it will rename the package names mmcv to mmcv-lite and mmcv-full to mmcv. See https://github.com/open-mmlab/mmcv/blob/master/docs/en/compatibility.md for more details.
  'On January 1, 2023, MMCV will release v2.0.0, in which it will remove '
/space/chuhz/software/anaconda3/envs/Where2comm/lib/python3.7/site-packages/torch/nn/functional.py:4004: UserWarning: Default grid_sample and affine_grid behavior has changed to align_corners=False since 1.3.0. Please specify align_corners=True if the old behavior is desired. See the documentation of grid_sample for details.
  "Default grid_sample and affine_grid behavior has changed "
/space/chuhz/software/anaconda3/envs/Where2comm/lib/python3.7/site-packages/torch/nn/functional.py:2748: UserWarning: reduction: 'mean' divides the total loss by both the batch size and the support size.'batchmean' divides only by the batch size, and aligns with the KL div math definition.'mean' will be changed to behave the same as 'batchmean' in the next major release.
  "reduction: 'mean' divides the total loss by both the batch size and the support size."
Traceback (most recent call last):
  File "opencood/tools/train.py", line 196, in <module>
    main()
  File "opencood/tools/train.py", line 113, in main
    output_dict = model(batch_data['ego'])
  File "/space/chuhz/software/anaconda3/envs/Where2comm/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/space/chuhz/workspace/v2x_object/Where2comm/opencood/models/point_pillar_where2comm_logits_fuse3d_da_add_occlusion.py", line 447, in forward
    op_single = (psm_single[:][1:2]*torch.softmax(occ_single[:][1:2])).view(2, 1, psm_single.shape[2], -1)
TypeError: softmax() received an invalid combination of arguments - got (Tensor), but expected one of:
 * (Tensor input, int dim, torch.dtype dtype)
 * (Tensor input, name dim, *, torch.dtype dtype)

srun: error: 3dimage-20: task 0: Exited with exit code 1
